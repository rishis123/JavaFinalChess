import javax.swing.*;
import java.awt.*; //both pacakges for window-based applications, as this chess program will be

public class ChessBoard extends JPanel { // what we did for graphics
    private static final int squareLength = 50; // like the house lab, each square on the chessboard is 50x50 units
    private static final int boardLength = 8; // chessboard is 8 x 8.
    private static final Color whiteSquare = Color.WHITE; // chessboard is white and gray squares (nested for loop structure below for assignment) 
    private static final Color graySquare = Color.GRAY; // see above
    private static final Color pieceColor = Color.BLACK; // black so we can see the pieces over the gray background
    private static final Font PIECE_FONT = new Font("Arial", Font.PLAIN, 32); // look back at this again
    private static final String[] PIECE_SYMBOLS = {"♔", "♕", "♖", "♗", "♘", "♙", "♚", "♛", "♜", "♝", "♞", "♟"}; // symbols from internet 

    protected void paintComponent(Graphics g) { // We are overriding this method from JComponent abstract class
        super.paintComponent(g); 
        Graphics2D g2d = (Graphics2D) g; // more stuff from our graphics unit

        // Draw chessboard squares
        for (int row = 0; row < boardLength; row++) {
            for (int col = 0; col < boardLength; col++) { // simple nested loop to array board values
                int x = col * squareLength; // x and y dimensions
                int y = row * squareLength;
                if ((row + col) % 2 == 0 ) {
                    Color squareColor = whiteSquare;
                }
                else {
                    Color squareColor = graySquare;
                }
                g2d.setColor(squareColor);
                g2d.fillRect(x, y, squareLength, squareLength); // fills them all in
            }
        }

//         Draw chess pieces
        g2d.setFont(PIECE_FONT);
        g2d.setColor(PIECE_COLOR);
        for (int row = 0; row < BOARD_SIZE; row++) {
            for (int col = 0; col < BOARD_SIZE; col++) {
                int x = col * SQUARE_SIZE + SQUARE_SIZE / 2;
                int y = row * SQUARE_SIZE + SQUARE_SIZE / 2;
                String pieceSymbol = PIECE_SYMBOLS[row * BOARD_SIZE + col];
                g2d.drawString(pieceSymbol, x - SQUARE_SIZE / 4, y + SQUARE_SIZE / 4);
            }
        }
    }
}
